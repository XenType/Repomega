NEXT
    OmegaFactory integration tests
    - Check Dal behavior on bad config
    - Test happy/error path for each method
    
    Evaluate structure
    - Factory should be pure methods, repos within are implemented
        using a singleton methodology
    - Moving support functions out of classes to reduce exposure
        - Primarily OmageObject, try to get it down to only the public methods
        - Could possibly make a helper class or module
    - OmegaBaseObject is a pure data object, extended by OmageObject
        - Should there be a way to deal only in OmegaBaseObject?

    Error Refactor
    - Reorganize Source/Suffix implementation for greater flexibility
    - Look into stack information?
    - Allow full field validation of all fields to complete before throwing Error
    - adjust tests to reflect any format changes
    - evaluate worth of try/catch in factory methods
    
    Refactor large functions

    Refactor tests/fixtures

    Find missing test coverage

    NPM publishing

    Config / setup
    - Generating table maps
    - Password storage

    Implementation Guide